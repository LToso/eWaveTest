// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eWaveVolvoAPI.Models;

#nullable disable

namespace eWaveVolvoAPI.Migrations
{
    [DbContext(typeof(_DbContext))]
    partial class _DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("eWaveVolvoAPI.Models.Truck", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("Axes")
                        .HasColumnType("int");

                    b.Property<float>("GrossWeight")
                        .HasColumnType("real");

                    b.Property<float>("LoadCapac")
                        .HasColumnType("real");

                    b.Property<float>("MaxLenght")
                        .HasColumnType("real");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)");

                    b.Property<int>("ModelYear")
                        .HasColumnType("int");

                    b.Property<int>("ProdYear")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Truck");
                });
#pragma warning restore 612, 618
        }
    }
}
